{
  "description": "Schema for Kyoto AST JSON representation",
  "definitions": {
    "rawArgument": {
      "description": "The raw value of an argument, including whether it's a constant",
      "type": "object",
      "properties": {
        "isLiteral": { "type": "boolean" },
        "value": {
          "type": [
            "number",
            "string",
            "boolean"
          ]
        }
      },

      "required": ["isLiteral", "value"],

      "additionalProperties": false

    },
    "argumentValue": {
      "description": "The value for an argument",
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/rawArgument"
        }
      },
      "additionalProperties": false
    },
    "namedArgumentList": {
      "description": "Name/value argument pairs used as named parameters",
      "type": "array",
      "items": {
        "$ref": "#/definitions/argumentValue"
      }
    },
    "positionalArgumentList": {
      "description": "List of values used as positional parameters",
      "type": "array",
      "items": {
        "$ref": "#/definitions/rawArgument"
      }
    },
    "singleArgument": {
      "description": "A single value used as a sole unnamed parameter",
      "$ref": "#/definitions/rawArgument"
    },
    "argumentList": {
      "description": "Parameters for a method or step call",
      "anyOf": [
        {
          "$ref": "#/definitions/namedArgumentList"
        },
        {
          "$ref": "#/definitions/singleArgument"
        },
        {
          "$ref": "#/definitions/positionalArgumentList"
        }
      ]
    },
    "keyAndValueOrMethodCall": {
      "description": "A key/value pair that can either have a value or method call",
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/valueOrMethodCall"
        }
      },
      "additionalProperties": false
    },
    "methodCall": {
      "description": "A method call with arguments, outside steps",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "arguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/methodArg"
          }
        }
      },
      "additionalProperties": false
    },
    "valueOrMethodCall": {
      "description": "Either a value or a method call",
      "anyOf": [
        {
          "$ref": "#/definitions/singleArgument"
        },
        {
          "$ref": "#/definitions/methodCall"
        }
      ]
    },
    "methodArg": {
      "description": "A possible argument for a method",
      "anyOf": [
        {
          "$ref": "#/definitions/valueOrMethodCall"
        },
        {
          "$ref": "#/definitions/keyAndValueOrMethodCall"
        }
      ]
    },
    "jobProperties": {
      "description": "One or more job properties",
      "type": "object",
      "properties": {
        "properties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/methodCall"
          },
          "minItems": 1
        }
      },
      "additionalProperties": false
    },
    "triggers": {
      "description": "One or more triggers",
      "type": "object",
      "properties": {
        "triggers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/methodCall"
          },
          "minItems": 1
        }
      },
      "additionalProperties": false
    },
    "parameters": {
      "description": "One or more parameter definitions",
      "type": "object",
      "properties": {
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/methodCall"
          },
          "minItems": 1
        }
      },
      "additionalProperties": false
    },
    "wrappers": {
      "description": "One or more wrappers",
      "type": "object",
      "properties": {
        "wrappers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/methodCall"
          },
          "minItems": 1
        }
      },
      "additionalProperties": false
    },
    "step": {
      "description": "A single step with parameters",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "arguments": {
          "$ref": "#/definitions/argumentList"
        }
      },
      "required": [
        "name",
        "arguments"
      ],
      "additionalProperties": false
    },
    "treeStep": {
      "description": "A block-scoped step with parameters containing 1 or more other steps",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "arguments": {
          "$ref": "#/definitions/argumentList"
        },
        "children": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/step"
          }
        }
      },
      "required": [
        "name",
        "arguments",
        "children"
      ],
      "additionalProperties": false
    },
    "branch": {
      "description": "A block of steps, generally one of: the contents of a stage, the contents of a build condition block, or one branch of a parallel invocation",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "steps": {
          "type": "array",
          "minItems": 1,
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/step"
              },
              {
                "$ref": "#/definitions/treeStep"
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "steps"
      ],
      "additionalProperties": false
    },
    "buildCondition": {
      "description": "A block of steps to be invoked depending on whether the given build condition is met",
      "type": "object",
      "properties": {
        "condition": {
          "type": "string"
        },
        "branch": {
          "$ref": "#/definitions/branch"
        }
      },
      "required": [
        "condition",
        "branch"
      ],
      "additionalProperties": false
    },
    "environment": {
      "description": "A block of key = value pairs, used to set environment variables for the build",
      "type": "array",
      "items": {
        "$ref": "#/definitions/argumentValue"
      },
      "minItems": 1
    },
    "tools": {
      "description": "A block of 'toolType \"toolVersion\"' pairs listing tools to autoinstall and add to the path",
      "type": "array",
      "items": {
        "$ref": "#/definitions/argumentValue"
      },
      "minItems": 1
    },
    "agent": {
      "description": "Determines the node/image in which the build will run from either named parameters or a bare none",
      "anyOf": [
        {
          "$ref": "#/definitions/argumentList"
        },
        {
          "type": "string",
          "enum": [
            "none"
          ]
        }
      ]
    },
    "when": {
      "description": "Closure to evaluate if the stage should run or not",
      "type": "object",
      "properties": {
        "arguments": {
          "$ref": "#/definitions/rawArgument"
        }

      },

      "additionalProperties": false

    },
    "post": {
      "description": "An array of build conditions with blocks of steps to run if those conditions are satisfied at the end of the build while still on the image/node the build ran on",
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/buildCondition"
          }
        }
      },
      "required": [
        "conditions"
      ],
      "additionalProperties": false
    },
    "stage": {
      "description": "A single Pipeline stage, with a name and one or more branches",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "failFast": {
          "type": "boolean"
        },
        "agent": {
          "$ref": "#/definitions/agent"
        },
        "when": {
          "$ref": "#/definitions/when"
        },
        "post": {
          "$ref": "#/definitions/post"
        },
        "tools": {
          "$ref": "#/definitions/tools"
        },
        "environment": {
          "$ref": "#/definitions/environment"
        },
        "branches": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/branch"
          }
        }
      },
      "required": [
        "name",
        "branches"
      ],
      "additionalProperties": false
    },
    "stages": {
      "description": "Top level section containing a list of stages",
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/stage"
      }
    },
    "options": {
      "description": "Top level section containing global configuration options",
      "type": "object",
      "properties": {
        "skipCheckout": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "pipeline": {
      "type": "object",
      "properties": {
        "stages": {
          "$ref": "#/definitions/stages"
        },
        "post": {
          "$ref": "#/definitions/post"
        },
        "environment": {
          "$ref": "#/definitions/environment"
        },
        "agent": {
          "$ref": "#/definitions/agent"
        },
        "tools": {
          "$ref": "#/definitions/tools"
        },
        "jobProperties": {
          "$ref": "#/definitions/jobProperties"
        },
        "triggers": {
          "$ref": "#/definitions/triggers"
        },
        "parameters": {
          "$ref": "#/definitions/parameters"
        },
        "wrappers": {
          "$ref": "#/definitions/wrappers"
        },
        "options": {
          "$ref": "#/definitions/options"
        }
      },
      "required": [
        "stages",
        "agent"
      ],
      "additionalProperties": false
    }
  },
  "type": "object",
  "properties": {
    "pipeline": {
      "$ref": "#/definitions/pipeline"
    }
  },
  "required": [
    "pipeline"
  ],
  "additionalProperties": false
}